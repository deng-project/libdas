# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_win32
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_win32)
  das_config = debug_win32
  WavefrontObjParserTest_config = debug_win32
  AsciiSTLParserTest_config = debug_win32
  BinarySTLParserTest_config = debug_win32
  HuffmanCompressionTest_config = debug_win32
  WavefrontObjCompilerTest_config = debug_win32
  TextureReaderTest_config = debug_win32
  DasReaderCoreTest_config = debug_win32

else ifeq ($(config),debug_linux)
  das_config = debug_linux
  WavefrontObjParserTest_config = debug_linux
  AsciiSTLParserTest_config = debug_linux
  BinarySTLParserTest_config = debug_linux
  HuffmanCompressionTest_config = debug_linux
  WavefrontObjCompilerTest_config = debug_linux
  TextureReaderTest_config = debug_linux
  DasReaderCoreTest_config = debug_linux

else ifeq ($(config),release_win32)
  das_config = release_win32
  WavefrontObjParserTest_config = release_win32
  AsciiSTLParserTest_config = release_win32
  BinarySTLParserTest_config = release_win32
  HuffmanCompressionTest_config = release_win32
  WavefrontObjCompilerTest_config = release_win32
  TextureReaderTest_config = release_win32
  DasReaderCoreTest_config = release_win32

else ifeq ($(config),release_linux)
  das_config = release_linux
  WavefrontObjParserTest_config = release_linux
  AsciiSTLParserTest_config = release_linux
  BinarySTLParserTest_config = release_linux
  HuffmanCompressionTest_config = release_linux
  WavefrontObjCompilerTest_config = release_linux
  TextureReaderTest_config = release_linux
  DasReaderCoreTest_config = release_linux

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := das WavefrontObjParserTest AsciiSTLParserTest BinarySTLParserTest HuffmanCompressionTest WavefrontObjCompilerTest TextureReaderTest DasReaderCoreTest

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

das:
ifneq (,$(das_config))
	@echo "==== Building das ($(das_config)) ===="
	@${MAKE} --no-print-directory -C . -f das.make config=$(das_config)
endif

WavefrontObjParserTest: das
ifneq (,$(WavefrontObjParserTest_config))
	@echo "==== Building WavefrontObjParserTest ($(WavefrontObjParserTest_config)) ===="
	@${MAKE} --no-print-directory -C . -f WavefrontObjParserTest.make config=$(WavefrontObjParserTest_config)
endif

AsciiSTLParserTest: das
ifneq (,$(AsciiSTLParserTest_config))
	@echo "==== Building AsciiSTLParserTest ($(AsciiSTLParserTest_config)) ===="
	@${MAKE} --no-print-directory -C . -f AsciiSTLParserTest.make config=$(AsciiSTLParserTest_config)
endif

BinarySTLParserTest: das
ifneq (,$(BinarySTLParserTest_config))
	@echo "==== Building BinarySTLParserTest ($(BinarySTLParserTest_config)) ===="
	@${MAKE} --no-print-directory -C . -f BinarySTLParserTest.make config=$(BinarySTLParserTest_config)
endif

HuffmanCompressionTest: das
ifneq (,$(HuffmanCompressionTest_config))
	@echo "==== Building HuffmanCompressionTest ($(HuffmanCompressionTest_config)) ===="
	@${MAKE} --no-print-directory -C . -f HuffmanCompressionTest.make config=$(HuffmanCompressionTest_config)
endif

WavefrontObjCompilerTest: das
ifneq (,$(WavefrontObjCompilerTest_config))
	@echo "==== Building WavefrontObjCompilerTest ($(WavefrontObjCompilerTest_config)) ===="
	@${MAKE} --no-print-directory -C . -f WavefrontObjCompilerTest.make config=$(WavefrontObjCompilerTest_config)
endif

TextureReaderTest: das
ifneq (,$(TextureReaderTest_config))
	@echo "==== Building TextureReaderTest ($(TextureReaderTest_config)) ===="
	@${MAKE} --no-print-directory -C . -f TextureReaderTest.make config=$(TextureReaderTest_config)
endif

DasReaderCoreTest: das
ifneq (,$(DasReaderCoreTest_config))
	@echo "==== Building DasReaderCoreTest ($(DasReaderCoreTest_config)) ===="
	@${MAKE} --no-print-directory -C . -f DasReaderCoreTest.make config=$(DasReaderCoreTest_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f das.make clean
	@${MAKE} --no-print-directory -C . -f WavefrontObjParserTest.make clean
	@${MAKE} --no-print-directory -C . -f AsciiSTLParserTest.make clean
	@${MAKE} --no-print-directory -C . -f BinarySTLParserTest.make clean
	@${MAKE} --no-print-directory -C . -f HuffmanCompressionTest.make clean
	@${MAKE} --no-print-directory -C . -f WavefrontObjCompilerTest.make clean
	@${MAKE} --no-print-directory -C . -f TextureReaderTest.make clean
	@${MAKE} --no-print-directory -C . -f DasReaderCoreTest.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_win32"
	@echo "  debug_linux"
	@echo "  release_win32"
	@echo "  release_linux"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   das"
	@echo "   WavefrontObjParserTest"
	@echo "   AsciiSTLParserTest"
	@echo "   BinarySTLParserTest"
	@echo "   HuffmanCompressionTest"
	@echo "   WavefrontObjCompilerTest"
	@echo "   TextureReaderTest"
	@echo "   DasReaderCoreTest"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"